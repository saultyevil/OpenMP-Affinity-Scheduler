# A simple template script to run OpenMP batch jobs on ARCHER at EPCC
#
# You have to do three things to run a program with it:
#
# 1) Make a copy of the script with the same name as your OpenMP executable,
#    eg if the executable is 'myjob' then type: cp ompbatch.pbs myjob.pbs
#
# 2) Set the variable OMP_NUM_THREADS appropriately (up to a maximum of 24)
#
# 3) Submit the script: qsub myjob.pbs
#
# All screen output (stdout and stderr) will appear in a file called
# myjob.pbs.oXXXXX, where XXXXX is the job number assigned at submit time.
#
# David Henty, EPCC, 25/11/2014
#

#PBS -A y14
#PBS -j oe
#PBS -l walltime=00:05:00
#PBS -l select=1

#----------------------------------------------------------#
# You should only have to change the following single line #
#----------------------------------------------------------#

export OMP_NUM_THREADS=6

cd $PBS_O_WORKDIR

OMPPROG=`basename $PBS_JOBNAME .pbs`

echo '-------------------------------------------------------------------------'
echo 'Running OpenMP program' $OMPPROG 'on' $OMP_NUM_THREADS 'threads'
echo 'Started at' `date`
echo '-------------------------------------------------------------------------'

for i in {1..11}
    do
    echo "Starting run $i"
    echo "Run $i" >> time_output.txt
    export OMP_SCHEDULE=static
    echo $OMP_SCHEDULE
    (time aprun -n 1 -d $OMP_NUM_THREADS ./$OMPPROG) 2>&1
    export OMP_SCHEDULE=auto
    echo $OMP_SCHEDULE
    (time aprun -n 1 -d $OMP_NUM_THREADS ./$OMPPROG) 2>&1

    for n in {0..6}
        do
        chunk_size=2**n
        export OMP_SCHEDULE=static,$((chunk_size))
        echo $OMP_SCHEDULE
        (time aprun -n 1 -d $OMP_NUM_THREADS ./$OMPPROG) 2>&1
        export OMP_SCHEDULE=dynamic,$((chunk_size))
        echo $OMP_SCHEDULE
        (time aprun -n 1 -d $OMP_NUM_THREADS ./$OMPPROG) 2>&1
        export OMP_SCHEDULE=guided,$((chunk_size))
        echo $OMP_SCHEDULE
        (time aprun -n 1 -d $OMP_NUM_THREADS ./$OMPPROG) 2>&1
        done
    done

echo '-------------------------------------------------------------------------'
echo 'Finished at' `date`
